Tree Traversals are basically of two types : Used in graphs also

1.Breadth First : We will go level by level

2.Depth First : Relative order is different in depth first traversal

We can either visit complete right subtree or left subtree or root - Vice versa in each case

a) Pre Order : Root Left Right

b) Post order ; Left Right Root

c) InOrder: Left Root Right



The time complexity of each approach is 0(n), where n is the number of nodes in the
tree. Although no memory is explicitly allocated, the function call stack reaches a
maximum depth of h, the height of the tree. Therefore, the space complexity is 0(h).
The minimum value for h is log n (complete binary tree) and the maximum value for h
is n (skewed tree).





These three terms inorder, preorder and postorder are kept on the order pf processing of ROOT element.

Now when we say INORDER, it means everything is in order i.e. we traverse from left to root to right.

Take an example of a line segment with left end point A and right end point B.
Take a mid point M on AB. Now inorder means starting from left (A) going to mid (M) and reaching right (R). As simple as that, everything is in order.


PREORDER means before order. Now what is before? Since i already said the names are kept keeping in mind the root element so the ROOT is before all the elements.
So the root will be processed before any element. But remember, the left node will always be processed before right node.



Same goes with POSTORDER. The ROOT element will be processed at last after LEFT and RIGHT nodes have been processed.